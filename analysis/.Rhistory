sapply(covfin, class)
#compute composite score for worldview
covfin$Worldview <- covfin %>% select(c(fm_unres_best, fm_limited, lim_gov)) %>% apply(.,1, mean, na.rm=TRUE)
#do some cleaning up of silly variable names
covfin <- covfin %>% rename(Age = age_4)
#create good labels for variables (from expss package)
covfin <- apply_labels(covfin,
gender = "Gender",
gender = c("Male" = 1, "Female" = 2, "Other" = 3),
education = "Education",
education = c("Hauptschule" = 1, "Realschule" = 2, "Abitur" = 3, "Universitaet" = 5, "None" = 4), #weird Qualtrics coding
COVID_positive_1 = "I was tested positive",
COVID_positive_1 = c("Yes" = 1, "No" = 0),
COVID_positive_2 = "Tested pos someone I know",
COVID_positive_2 = c("Yes" = 1, "No" = 0),
scenario_type = "Type of policy scenario",
COVID_lost_job = "I lost my job",
COVID_lost_job = c("Yes" = 1, "No" = 0),
COVID_info_source= "Information source")
covfin$COVID_info_source <- gsub("1", "Newspaper (printed or online)", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("2", "Social media", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("3", "Friends/family", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("4", "Radio", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("5", "Television", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("6", "Other", covfin$COVID_info_source)
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
covfin[] <- lapply(covfin, function(x) {
if(is.factor(x)) as.numeric(as.character(x)) else x
})
sapply(covfin, class)
covfin <- covfin %>% mutate(fm_unres_best=ifelse(fm_unres_best==1,1,fm_unres_best-2)) %>%
mutate(fm_limited=ifelse(fm_limited==1,1,fm_limited-2)) %>%
mutate(lim_gov=ifelse(lim_gov==1,1,lim_gov-2)) %>% mutate(fm_limited=revscore(fm_limited,7))
covfin$id <- 1:nrow(covfin)
#compute composite score for worldview
covfin$Worldview <- covfin %>% select(c(fm_unres_best, fm_limited, lim_gov)) %>% apply(.,1, mean, na.rm=TRUE)
#do some cleaning up of silly variable names
covfin <- covfin %>% rename(Age = age_4)
#create good labels for variables (from expss package)
covfin <- apply_labels(covfin,
gender = "Gender",
gender = c("Male" = 1, "Female" = 2, "Other" = 3),
education = "Education",
education = c("Hauptschule" = 1, "Realschule" = 2, "Abitur" = 3, "Universitaet" = 5, "None" = 4), #weird Qualtrics coding
COVID_positive_1 = "I was tested positive",
COVID_positive_1 = c("Yes" = 1, "No" = 0),
COVID_positive_2 = "Tested pos someone I know",
COVID_positive_2 = c("Yes" = 1, "No" = 0),
scenario_type = "Type of policy scenario",
COVID_lost_job = "I lost my job",
COVID_lost_job = c("Yes" = 1, "No" = 0),
COVID_info_source= "Information source")
covfin$COVID_info_source <- gsub("1", "Newspaper (printed or online)", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("2", "Social media", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("3", "Friends/family", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("4", "Radio", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("5", "Television", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("6", "Other", covfin$COVID_info_source)
#create good labels for variables (from expss package)
covfin <- apply_labels(covfin,
gender = "Gender",
gender = c("Male" = 1, "Female" = 2, "Other" = 3),
education = "Education",
education = c("Hauptschule" = 1, "Realschule" = 2, "Abitur" = 3, "Universitaet" = 5, "None" = 4), #weird Qualtrics coding
COVID_positive_1 = "I was tested positive",
COVID_positive_1 = c("Yes" = 1, "No" = 0),
COVID_positive_2 = "Tested pos someone I know",
COVID_positive_2 = c("Yes" = 1, "No" = 0),
scenario_type = "Type of policy scenario",
COVID_lost_job = "I lost my job",
COVID_lost_job = c("Yes" = 1, "No" = 0),
COVID_info_source= "Information source")
covfin$COVID_info_source <- gsub("1", "Newspaper (printed or online)", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("2", "Social media", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("3", "Friends/family", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("4", "Radio", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("5", "Television", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("6", "Other", covfin$COVID_info_source)
## Demographics
Number of retained participants: `r dim(covfin)[1]`.
Gender, education, and age:
```{r demographics, echo=TRUE}
cro_tpct(covfin$gender) %>% set_caption("Gender identification: Percentages")
cro_tpct(covfin$education) %>% set_caption("Level of education: Percentages")
descr(covfin$Age)
hist(covfin$Age, xlab="Age",main="",las=1)
## Summary of COVID related variables
How long have you been in "lockdown"?
```{r , echo=TRUE}
hist(covfin$COVID_ndays_lockdown_4, xlab="Days in `lockdown`",main="",las=1)
```
Have you, temporarily or permanently, lost your job as a consequence of the novel coronavirus (COVID-19) pandemic?
```{r , echo=TRUE}
cro_tpct(covfin$COVID_lost_job) %>% set_caption("I have lost my job: Percentages")
What is your main source of information about the novel coronavirus (COVID-19) pandemic?
```{r , echo=TRUE}
cro_tpct(covfin$COVID_info_source) %>% set_caption("Information source: Percentages")
```
Have you tested positive for COVID?
hist(covfin$Age, xlab="Age",main="",las=1)
hist(covfin$COVID_ndays_lockdown_4, xlab="Days in `lockdown`",main="",las=1)
cro_tpct(covfin$COVID_lost_job) %>% set_caption("I have lost my job: Percentages")
cro_tpct(covfin$COVID_info_source) %>% set_caption("Information source: Percentages")
cro_tpct(covfin$COVID_positive_1) %>% set_caption("I tested positive for COVID-19: Percentages")
cro_tpct(covfin$COVID_positive_2) %>% set_caption("Somebody I know tested positive for COVID-19: Percentages")
covvars<-gather(covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)),factor_key = TRUE)
covvars$key <- factor(covvars$key,labels=c("Severity for UK population","Harm to your health if infected","Concern I will infected","Concern that someone I know infected"))
covhisto <- ggplot(covvars, aes(value)) +
geom_histogram(bins = 10) +
xlab("Response") + ylab("Frequency") +
facet_wrap(~key, scales = 'free_x',labeller=label_value)
print(covhisto)
covhisto <- ggplot(covvars, aes(value)) +
geom_histogram(bins = 6) +
xlab("Response") + ylab("Frequency") +
facet_wrap(~key, scales = 'free_x',labeller=label_value)
print(covhisto)
covhisto <- ggplot(covvars, aes(value)) +
geom_histogram(bins = 5) +
xlab("Response") + ylab("Frequency") +
facet_wrap(~key, scales = 'free_x',labeller=label_value)
print(covhisto)
covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)) %>% cor (.,use="pairwise.complete.obs") %>% round(.,3)
#compute composite score for COVID risk
covfin$COVIDrisk <- covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)) %>% apply(.,1, mean, na.rm=TRUE)
#compute composite score for government trust
covfin$govtrust <- covfin %>% select(starts_with("trus")) %>% apply(.,1, mean, na.rm=TRUE)
#plot violins side by side
plotvn <- c("Reduce contracting","Resume normal","Reduce spread")
vioplot(select(covfin,c(participant_benefit,Q328,reduce_spread_mild)), col = "yellow", plotCentre = "line", side = "left",las=1,names=plotvn,ylim=c(1,7.5))
vioplot(select(covfin,c(Q284,Q330,reduce_spread_severe)), col = "red", plotCentre = "line", side = "right", add = T )
title(xlab="Variable",ylab="Confidence")
legend(3,7.6, fill = c("yellow", "red"), legend = c("Mild", "Severe"), title = "Type of scenario")
```{r acceptable, echo=TRUE, warning=FALSE, message=FALSE}
#use gather and drop
accept1 <- covfin %>% select(c(app_uptake1,is_accceptable1)) %>% pivot_longer(c(app_uptake1,is_accceptable1), names_to = "key", values_to = "value")
covfin$accept1 <- (accept1 %>% drop_na())$value
#we do not drop NAs for the pivoted data frame to allow correct merging for quasi interval score below with the conditional responses
accept1 <- apply_labels(accept1,
value = "Acceptability of policy",
value = c("Yes" = 1, "No" = 0),
key = "Type of scenario",
key = c("Mild" ="app_uptake1", "Severe" = "is_accceptable1"))
cro_tpct(accept1$value,row_vars=accept1$key) #presence of NAs makes no difference here
chisq.test(unlabel(accept1$value),unlabel(accept1$key),correct=TRUE)
#use gather and drop
accept2 <- covfin %>% select(c(app_uptake2,is_acceptable2)) %>% pivot_longer(c(app_uptake2,is_acceptable2), names_to = "key", values_to = "value")
covfin$accept2 <- (accept2 %>% drop_na() )$value
accept2 <- apply_labels(accept2,
value = "Acceptability of policy",
value = c("Yes" = 1, "No" = 0),
key = "Type of scenario",
key = c("Mild" ="app_uptake2", "Severe" = "is_acceptable2"))
cro_tpct(accept2$value,row_vars=accept2$key)
chisq.test(unlabel(accept2$value),unlabel(accept2$key),correct=TRUE)
#use gather and drop
sunset <- covfin %>% select(c(sunset_app,sunset)) %>% pivot_longer(c(sunset_app,sunset), names_to = "key", values_to = "value")
sunset <- apply_labels(sunset,
value = "Acceptability with sunset",
value = c("Yes" = 1, "No" = 0),
key = "Type of scenario",
key = c("Mild" ="sunset_app", "Severe" = "sunset"))
cro_tpct(sunset$value,row_vars=sunset$key)
chisq.test(unlabel(sunset$value),unlabel(sunset$key),correct=TRUE)
covfin <- apply_labels(covfin,
data_local = "Acceptability with local storage",
data_local = c("Yes" = 1, "No" = 0))
cro_tpct(covfin$data_local)
covfin <- apply_labels(covfin,
opt_out = "Acceptability with opt out",
opt_out = c("Yes" = 1, "No" = 0))
cro_tpct(covfin$opt_out)
quasinttemp <- covfin %>% select(c( data_local, opt_out  )) %>% mutate_all(unlabel)  %>% pivot_longer(c( data_local, opt_out  ), names_to = "key", values_to = "value")
#now merge the various acceptability variables. It is here that the retention of NAs from above is crucial to achieve alignment
quasint <- as.data.frame(cbind(accept2$value, sunset$value, quasinttemp))
names(quasint) <- c("accept","sunset","scenario","localoptout")
quasint$composite <- ( quasint$accept- ifelse(is.na(quasint$sunset),0,(quasint$sunset==0)) - ifelse(is.na(quasint$localoptout), 0, (quasint$localoptout==0)) )
quasint <- quasint[!is.na(quasint$composite),]
cro_tpct(quasint$composite)
cor.test(quasint$composite,covfin$Worldview,method="kendall")
cor.test(quasint$composite,covfin$COVIDrisk ,method="kendall")
cor.test(quasint$composite,covfin$govtrust ,method="kendall")
#plot violins side by side
#x11(width=10,height=6)
plotvn <- c("Decline","Necessary","Sensitive","Risk","Trust use","Trust privacy","Secure", "Control")
vioplot(select(filter(covfin,scenario_type=="mild"),c(decline_participate:ongoing_control)), col = "yellow", plotCentre = "line", side = "left",las=1,names=plotvn,ylim=c(1,7.5))
select(filter(covfin,scenario_type=="mild"),c(decline_participate:ongoing_control)), col = "yellow", plotCentre = "line", side = "left",las=1,names=plotvn,ylim=c(1,7.5)
select(filter(covfin,scenario_type=="mild"),c(decline_participate:ongoing_control))
View(covdata)
# Reading data and variable names
covfn        <- paste(inputdir,"German_tracking_survey_numeric.csv",sep="/") #this is the complete data file with demographics. Version on OSF does not have demographics to reduce likelihood of reidentification of respondents.
View(covdata)
covdata      <- read.csv(covfn)
#define working directories
inputdir <- "../data"
# Reading data and variable names
covfn        <- paste(inputdir,"German_tracking_survey_numeric.csv",sep="/") #this is the complete data file with demographics. Version on OSF does not have demographics to reduce likelihood of reidentification of respondents.
covdata      <- read.csv(covfn)
View(covdata)
covdata      <- read.csv(covfn, stringsAsFactors=FALSE)
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
covfin <- covfin %>% mutate(fm_unres_best=ifelse(fm_unres_best==1,1,fm_unres_best-2)) %>%
mutate(fm_limited=ifelse(fm_limited==1,1,fm_limited-2)) %>%
mutate(lim_gov=ifelse(lim_gov==1,1,lim_gov-2)) %>% mutate(fm_limited=revscore(fm_limited,7))
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished>0) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
rm(list=ls())
library(lattice)
library(hexbin) #helps with large data sets in lattic scatterplot matrix
library(stargazer)
library(tidyverse)
library(lme4)
library(gridExtra)
library(stringr)
library(Hmisc)
library(reshape2)
library(psych)
library(scales)
library(summarytools) #contains descr()
library(workflowr)
library(readxl)
library(vioplot)
library(expss)  #for pretty looking tables
library(jtools) #for pretty looking regression output
library(kableExtra) #more prettification of regression output via jtools --> knitr
library(broom.mixed) #tidying methods for mixed models, required for pretty looking regression output
revscore <- function (x,mm) {  #this reverse scores a scale for items of reversed polarity
return ((mm+1)-x)
}
#define working directories
inputdir <- "data"
# Reading data and variable names
covfn        <- paste(inputdir,"German_tracking_survey_numeric.csv",sep="/") #this is the complete data file with demographics. Version on OSF does not have demographics to reduce likelihood of reidentification of respondents.
covdata      <- read.csv(covfn)
#covvarn      <- read_excel(paste(inputdir,"varCovid.xlsx",sep="/"))
covdata      <- read.csv(covfn, stringsAsFactors=FALSE)
#define working directories
inputdir <- "../data"
# Reading data and variable names
covfn        <- paste(inputdir,"German_tracking_survey_numeric.csv",sep="/") #this is the complete data file with demographics. Version on OSF does not have demographics to reduce likelihood of reidentification of respondents.
covdata      <- read.csv(covfn, stringsAsFactors=FALSE)
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
covfin <- covfin %>% mutate(fm_unres_best=ifelse(fm_unres_best==1,1,fm_unres_best-2)) %>%
mutate(fm_limited=ifelse(fm_limited==1,1,fm_limited-2)) %>%
mutate(lim_gov=ifelse(lim_gov==1,1,lim_gov-2)) %>% mutate(fm_limited=revscore(fm_limited,7))
covdata      <- read.csv(covfn, header = TRUE)
View(covdata)
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
covfin <- covfin %>% mutate(fm_unres_best=ifelse(fm_unres_best==1,1,fm_unres_best-2)) %>%
mutate(fm_limited=ifelse(fm_limited==1,1,fm_limited-2)) %>%
mutate(lim_gov=ifelse(lim_gov==1,1,lim_gov-2)) %>% mutate(fm_limited=revscore(fm_limited,7))
covfin$id <- 1:nrow(covfin)
#compute composite score for worldview
covfin$Worldview <- covfin %>% select(c(fm_unres_best, fm_limited, lim_gov)) %>% apply(.,1, mean, na.rm=TRUE)
#do some cleaning up of silly variable names
covfin <- covfin %>% rename(Age = age_4)
#create good labels for variables (from expss package)
covfin <- apply_labels(covfin,
gender = "Gender",
gender = c("Male" = 1, "Female" = 2, "Other" = 3),
education = "Education",
education = c("Hauptschule" = 1, "Realschule" = 2, "Abitur" = 3, "Universitaet" = 5, "None" = 4), #weird Qualtrics coding
COVID_positive_1 = "I was tested positive",
COVID_positive_1 = c("Yes" = 1, "No" = 0),
COVID_positive_2 = "Tested pos someone I know",
COVID_positive_2 = c("Yes" = 1, "No" = 0),
scenario_type = "Type of policy scenario",
COVID_lost_job = "I lost my job",
COVID_lost_job = c("Yes" = 1, "No" = 0),
COVID_info_source= "Information source")
covfin$COVID_info_source <- gsub("1", "Newspaper (printed or online)", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("2", "Social media", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("3", "Friends/family", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("4", "Radio", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("5", "Television", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("6", "Other", covfin$COVID_info_source)
#create good labels for variables (from expss package)
covfin <- apply_labels(covfin,
gender = "Gender",
gender = c("Male" = 1, "Female" = 2, "Other" = 3),
education = "Education",
education = c("Hauptschule" = 1, "Realschule" = 2, "Abitur" = 3, "Universitaet" = 5, "None" = 4), #weird Qualtrics coding
COVID_positive_1 = "I was tested positive",
COVID_positive_1 = c("Yes" = 1, "No" = 0),
COVID_positive_2 = "Tested pos someone I know",
COVID_positive_2 = c("Yes" = 1, "No" = 0),
scenario_type = "Type of policy scenario",
COVID_lost_job = "I lost my job",
COVID_lost_job = c("Yes" = 1, "No" = 0),
COVID_info_source= "Information source")
covfin$COVID_info_source <- gsub("1", "Newspaper (printed or online)", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("2", "Social media", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("3", "Friends/family", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("4", "Radio", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("5", "Television", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("6", "Other", covfin$COVID_info_source)
cro_tpct(covfin$gender) %>% set_caption("Gender identification: Percentages")
cro_tpct(covfin$education) %>% set_caption("Level of education: Percentages")
descr(covfin$Age)
hist(covfin$Age, xlab="Age",main="",las=1)
covdata      <- read.csv(covfn)
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
covfin <- covfin %>% mutate(fm_unres_best=ifelse(fm_unres_best==1,1,fm_unres_best-2)) %>%
mutate(fm_limited=ifelse(fm_limited==1,1,fm_limited-2)) %>%
mutate(lim_gov=ifelse(lim_gov==1,1,lim_gov-2)) %>% mutate(fm_limited=revscore(fm_limited,7))
covfin$id <- 1:nrow(covfin)
#compute composite score for worldview
covfin$Worldview <- covfin %>% select(c(fm_unres_best, fm_limited, lim_gov)) %>% apply(.,1, mean, na.rm=TRUE)
#do some cleaning up of silly variable names
covfin <- covfin %>% rename(Age = age_4)
#create good labels for variables (from expss package)
covfin <- apply_labels(covfin,
gender = "Gender",
gender = c("Male" = 1, "Female" = 2, "Other" = 3),
education = "Education",
education = c("Hauptschule" = 1, "Realschule" = 2, "Abitur" = 3, "Universitaet" = 5, "None" = 4), #weird Qualtrics coding
COVID_positive_1 = "I was tested positive",
COVID_positive_1 = c("Yes" = 1, "No" = 0),
COVID_positive_2 = "Tested pos someone I know",
COVID_positive_2 = c("Yes" = 1, "No" = 0),
scenario_type = "Type of policy scenario",
COVID_lost_job = "I lost my job",
COVID_lost_job = c("Yes" = 1, "No" = 0),
COVID_info_source= "Information source")
covfin$COVID_info_source <- gsub("1", "Newspaper (printed or online)", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("2", "Social media", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("3", "Friends/family", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("4", "Radio", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("5", "Television", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("6", "Other", covfin$COVID_info_source)
```{r cleanup, echo=TRUE}
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
covfin <- covfin %>% mutate(fm_unres_best=ifelse(fm_unres_best==1,1,fm_unres_best-2)) %>%
mutate(fm_limited=ifelse(fm_limited==1,1,fm_limited-2)) %>%
mutate(lim_gov=ifelse(lim_gov==1,1,lim_gov-2)) %>% mutate(fm_limited=revscore(fm_limited,7))
covfin[] <- lapply(covfin, function(x) {
if(is.factor(x)) as.numeric(as.character(x)) else x
})
covfin[] <- lapply(covfin, function(x) {
if(is.factor(x)) as.numeric(x) else x
})
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
covfin[] <- lapply(covfin, function(x) {
if(is.factor(x)) as.numeric(x) else x
})
sapply(covfin, class)
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
#remove duplicates first because the data set has not been touched yet, so the row pointers are correct
covfin  <- covdata %>% filter(Finished==1) %>%  filter(attention_check == 1) %>% filter(!(is_accceptable1==""&app_uptake1=="")) %>% filter(!(is_acceptable2==""&app_uptake2=="")) %>%
select(-c(starts_with("Recipient"),starts_with("Q_"),
Status,Finished,Progress,DistributionChannel,UserLanguage,ResponseId))
covfin <- covfin %>% mutate(fm_unres_best=ifelse(fm_unres_best==1,1,fm_unres_best-2)) %>%
mutate(fm_limited=ifelse(fm_limited==1,1,fm_limited-2)) %>%
mutate(lim_gov=ifelse(lim_gov==1,1,lim_gov-2)) %>% mutate(fm_limited=revscore(fm_limited,7))
covfin$id <- 1:nrow(covfin)
#compute composite score for worldview
covfin$Worldview <- covfin %>% select(c(fm_unres_best, fm_limited, lim_gov)) %>% apply(.,1, mean, na.rm=TRUE)
#do some cleaning up of silly variable names
covfin <- covfin %>% rename(Age = age_4)
#create good labels for variables (from expss package)
covfin <- apply_labels(covfin,
gender = "Gender",
gender = c("Male" = 1, "Female" = 2, "Other" = 3),
education = "Education",
education = c("Hauptschule" = 1, "Realschule" = 2, "Abitur" = 3, "Universitaet" = 5, "None" = 4), #weird Qualtrics coding
COVID_positive_1 = "I was tested positive",
COVID_positive_1 = c("Yes" = 1, "No" = 0),
COVID_positive_2 = "Tested pos someone I know",
COVID_positive_2 = c("Yes" = 1, "No" = 0),
scenario_type = "Type of policy scenario",
COVID_lost_job = "I lost my job",
COVID_lost_job = c("Yes" = 1, "No" = 0),
COVID_info_source= "Information source")
covfin$COVID_info_source <- gsub("1", "Newspaper (printed or online)", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("2", "Social media", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("3", "Friends/family", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("4", "Radio", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("5", "Television", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("6", "Other", covfin$COVID_info_source)
#create good labels for variables (from expss package)
covfin <- apply_labels(covfin,
gender = "Gender",
gender = c("Male" = 1, "Female" = 2, "Other" = 3),
education = "Education",
education = c("Hauptschule" = 1, "Realschule" = 2, "Abitur" = 3, "Universitaet" = 5, "None" = 4), #weird Qualtrics coding
COVID_positive_1 = "I was tested positive",
COVID_positive_1 = c("Yes" = 1, "No" = 0),
COVID_positive_2 = "Tested pos someone I know",
COVID_positive_2 = c("Yes" = 1, "No" = 0),
scenario_type = "Type of policy scenario",
COVID_lost_job = "I lost my job",
COVID_lost_job = c("Yes" = 1, "No" = 0),
COVID_info_source= "Information source")
covfin$COVID_info_source <- gsub("1", "Newspaper (printed or online)", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("2", "Social media", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("3", "Friends/family", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("4", "Radio", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("5", "Television", covfin$COVID_info_source)
covfin$COVID_info_source <- gsub("6", "Other", covfin$COVID_info_source)
## Demographics
Number of retained participants: `r dim(covfin)[1]`.
Gender, education, and age:
```{r demographics, echo=TRUE}
cro_tpct(covfin$gender) %>% set_caption("Gender identification: Percentages")
cro_tpct(covfin$education) %>% set_caption("Level of education: Percentages")
descr(covfin$Age)
hist(covfin$Age, xlab="Age",main="",las=1)
cro_tpct(covfin$gender) %>% set_caption("Gender identification: Percentages")
cro_tpct(covfin$education) %>% set_caption("Level of education: Percentages")
covfin$Age <- as.numeric(covfin$Age)
descr(covfin$Age)
hist(covfin$Age, xlab="Age",main="",las=1)
hist(covfin$COVID_ndays_lockdown_4, xlab="Days in `lockdown`",main="",las=1)
covfin$COVID_ndays_lockdown_4 <- as.numeric(covfin$COVID_ndays_lockdown_4)
hist(covfin$COVID_ndays_lockdown_4, xlab="Days in `lockdown`",main="",las=1)
covfin$OVID_lost_job <- as.numeric(covfin$OVID_lost_job)
cro_tpct(covfin$COVID_lost_job) %>% set_caption("I have lost my job: Percentages")
covfin$COVID_lost_job <- as.numeric(covfin$COVID_lost_job)
cro_tpct(covfin$COVID_lost_job) %>% set_caption("I have lost my job: Percentages")
cro_tpct(covfin$COVID_info_source) %>% set_caption("Information source: Percentages")
cro_tpct(covfin$COVID_positive_1) %>% set_caption("I tested positive for COVID-19: Percentages")
cro_tpct(covfin$COVID_positive_2) %>% set_caption("Somebody I know tested positive for COVID-19: Percentages")
covvars<-gather(covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)),factor_key = TRUE)
covvars$key <- factor(covvars$key,labels=c("Severity for UK population","Harm to your health if infected","Concern I will infected","Concern that someone I know infected"))
covhisto <- ggplot(covvars, aes(value)) +
geom_histogram(bins = 5) +
xlab("Response") + ylab("Frequency") +
facet_wrap(~key, scales = 'free_x',labeller=label_value)
print(covhisto)
covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)) %>% cor (.,use="pairwise.complete.obs") %>% round(.,3)
#compute composite score for COVID risk
covfin$COVIDrisk <- covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)) %>% apply(.,1, mean, na.rm=TRUE)
#compute composite score for government trust
covfin$govtrust <- covfin %>% select(starts_with("trus")) %>% apply(.,1, mean, na.rm=TRUE)
```{r covidsum12, echo=TRUE}
covvars<-gather(covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)),factor_key = TRUE)
covvars$key <- factor(covvars$key,labels=c("Severity for UK population","Harm to your health if infected","Concern I will infected","Concern that someone I know infected"))
covhisto <- ggplot(covvars, aes(value)) +
geom_histogram(bins = 5) +
xlab("Response") + ylab("Frequency") +
facet_wrap(~key, scales = 'free_x',labeller=label_value)
print(covhisto)
covvars<-gather(covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)),factor_key = TRUE)
covvars$key <- factor(covvars$key,labels=c("Severity for UK population","Harm to your health if infected","Concern I will infected","Concern that someone I know infected"))
covhisto <- ggplot(covvars, aes(value)) +
stat_count() +
xlab("Response") + ylab("Frequency") +
facet_wrap(~key, scales = 'free_x',labeller=label_value)
print(covhisto)
covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)) %>% cor (.,use="pairwise.complete.obs") %>% round(.,3)
covvars<-gather(covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)),factor_key = TRUE)
covvars$key <- factor(covvars$key,labels=c("Severity for German population","Harm to your health if infected","Concern I will infected","Concern that someone I know infected"))
covhisto <- ggplot(covvars, aes(value)) +
stat_count() +
xlab("Response") + ylab("Frequency") +
facet_wrap(~key, scales = 'free_x',labeller=label_value)
print(covhisto)
covfin$COVID_sev_general <- as.numeric(covfin$COVID_sev_general)
covfin$COVID_pers_harm <- as.numeric(covfin$COVID_pers_harm)
covfin$COVID_pers_concern <- as.numeric(covfin$COVID_pers_concern)
covfin$COVID_concern4other <- as.numeric(covfin$COVID_concern4other)
covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)) %>% cor (.,use="pairwise.complete.obs") %>% round(.,3)
covfin$COVID_sev_general <- as.numeric(covfin$COVID_sev_general)
covfin$COVID_pers_harm <- as.numeric(covfin$COVID_pers_harm)
covfin$COVID_pers_concern <- as.numeric(covfin$COVID_pers_concern)
covfin$COVID_concern4other <- as.numeric(covfin$COVID_concern4other)
covvars<-gather(covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)),factor_key = TRUE)
covvars$key <- factor(covvars$key,labels=c("Severity for German population","Harm to your health if infected","Concern I will infected","Concern that someone I know infected"))
covhisto <- ggplot(covvars, aes(value)) +
stat_count() +
xlab("Response") + ylab("Frequency") +
facet_wrap(~key, scales = 'free_x',labeller=label_value)
print(covhisto)
covfin %>% select(c(COVID_sev_general,COVID_pers_harm,COVID_pers_concern,COVID_concern4others)) %>% cor (.,use="pairwise.complete.obs") %>% round(.,3)
covfin$COVID_sev_general <- as.numeric(covfin$COVID_sev_general)
covfin$COVID_pers_harm <- as.numeric(covfin$COVID_pers_harm)
covfin$COVID_pers_concern <- as.numeric(covfin$COVID_pers_concern)
covfin$COVID_concern4other <- as.numeric(covfin$COVID_concern4other)
